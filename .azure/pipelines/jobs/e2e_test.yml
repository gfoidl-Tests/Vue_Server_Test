jobs:
  - job: e2e_test
    displayName: e2e tests
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
      - template: steps/dotnet-install.yml
      - template: steps/yarn-install.yml

      - task: DownloadPipelineArtifact@2
        inputs:
          artifactName: web-app
          targetPath: web-app

      - bash: |
          export WEB_APP_DIR=$(pwd)/web-app
          export ASPNETCORE_CONTENTROOT=$(pwd)/web-app
          export ASPNETCORE_ENVIRONMENT=Development

          cd frontend
          export JEST_PUPPETEER_CONFIG=tests/e2e-full/jest-puppeteer.config.js
          yarn jest --projects tests/e2e-full --verbose --reporters=default --reporters=jest-junit
        displayName: test

      - task: PublishTestResults@2
        condition: always()
        inputs:
          testRunner: JUnit
          testResultsFiles: frontend/junit.xml

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: frontend/logs
          artifactName: logs-e2e-full
      
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: frontend/screenshots-e2e-full
          artifactName: screenshots-e2e-full

      - bash: |
          cd frontend
          chmod +x tests/e2e-full/*.sh

          echo "-------------------------------------------------"
          echo "log-dir:"
          ls -la --color logs
          echo ""
          echo "-------------------------------------------------"

          tests/e2e-full/verify-server-logs.sh
        displayName: verify server logs

  - job: e2e_test_iis
    displayName: e2e tests on IIS
    pool:
      vmImage: 'windows-2019'
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifactName: web-app
          targetPath: $(Agent.BuildDirectory)/web-app

      - task: IISWebAppManagementOnMachineGroup@0
        inputs:
          EnableIIS: true
          IISDeploymentType: 'IISWebsite'
          ActionIISWebsite: 'CreateOrUpdateWebsite'
          WebsiteName: 'Vue_Test_Server'
          WebsitePhysicalPath: '$(Agent.BuildDirectory)\web-app'
          WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
          AddBinding: true
          Bindings: '{"bindings":[{"protocol":"http","ipAddress":"AllUnassigned","port":"5000","hostname":"","sslThumbprint":"","sniFlag":false}]}'
          CreateOrUpdateAppPoolForWebsite: true
          AppPoolNameForWebsite: 'www-test'
          DotNetVersionForWebsite: 'No Managed Code'
          PipeLineModeForWebsite: 'Integrated'
          AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'

      # extension from Marketplace https://marketplace.visualstudio.com/items?itemName=rbosma.InstallNetCoreRuntimeAndHosting
      - task: InstallNetCoreRuntimeAndHosting@1
        inputs:
          version: 5.0
          norestart: true
          iisReset: true

      - bash: |
          curl -v http://localhost:5000
        displayName: verify IIS started
