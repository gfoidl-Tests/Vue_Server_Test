jobs:
  - job: e2e_test_iis
    displayName: e2e tests IIS
    pool:
      vmImage: windows-2019
    steps:
      #- task: DownloadPipelineArtifact@2
      #  inputs:
      #    artifactName: web-app
      #    targetPath: $(Build.SourcesDirectory)\web-app

      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'specific'
          project: 'b917ef97-c76f-4ce5-a20e-a2eb342180cb'
          definition: '34'
          buildVersionToDownload: 'specific'
          pipelineId: '1433'
          artifactName: 'web-app'
          targetPath: '$(Build.SourcesDirectory)\web-app'

      #- task: IISWebAppManagementOnMachineGroup@0
      #  inputs:
      #    #EnableIIS: true      already installed
      #    IISDeploymentType: 'IISWebsite'
      #    ActionIISWebsite: 'CreateOrUpdateWebsite'
      #    WebsiteName: 'Vue_Test_Server'
      #    WebsitePhysicalPath: '$(Build.SourcesDirectory)\web-app'
      #    WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
      #    AddBinding: true
      #    Bindings: '{"bindings":[{"protocol":"http","ipAddress":"*","port":"5000","hostname":"","sslThumbprint":"","sniFlag":false}]}'
      #    CreateOrUpdateAppPoolForWebsite: true
      #    AppPoolNameForWebsite: 'www-test'
      #    DotNetVersionForWebsite: 'No Managed Code'
      #    PipeLineModeForWebsite: 'Integrated'
      #    AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
      #
      #- task: IISWebAppManagementOnMachineGroup@0
      #  inputs:
      #    IISDeploymentType: 'IISWebsite'
      #    ActionIISWebsite: 'StartWebsite'
      #    StartStopWebsiteName: 'Vue_Test_Server'
      #
      # The above two task "expand" to these script-steps (here with a little clean-up)
      - task: CmdLine@2
        inputs:
          script: |
            "C:\windows\system32\inetsrv\appcmd.exe"  add apppool /name:"www-test"
            echo --------------------------------------------------
            "C:\windows\system32\inetsrv\appcmd.exe"  set apppool /apppool.name:"www-test" -managedRuntimeVersion: -managedPipelineMode:Integrated -processModel.identityType:ApplicationPoolIdentity
            echo --------------------------------------------------
            "C:\windows\system32\inetsrv\appcmd.exe"  add site /name:"Vue_Test_Server" /physicalPath:"$(Build.SourcesDirectory)\web-app"
            echo --------------------------------------------------
            "C:\windows\system32\inetsrv\appcmd.exe"  set site /site.name:"Vue_Test_Server" -applicationDefaults.applicationPool:"www-test"
            echo --------------------------------------------------
            "C:\windows\system32\inetsrv\appcmd.exe"  set site /site.name:"Vue_Test_Server" /+bindings.[protocol='http',bindingInformation='*:5000:']
            "C:\windows\system32\inetsrv\appcmd.exe"  set site /site.name:"Vue_Test_Server" /+bindings.[protocol='https',bindingInformation='*:5001:']
            echo --------------------------------------------------
            "C:\windows\system32\inetsrv\appcmd.exe"  list sites
            echo --------------------------------------------------
            "C:\windows\system32\inetsrv\appcmd.exe" start site /site.name:"Vue_Test_Server"
            echo --------------------------------------------------
            "C:\windows\system32\inetsrv\appcmd.exe"  list sites
        displayName: setup IIS-site

      - task: PowerShell@2
        displayName: setup SSL
        inputs:
          targetType: 'inline'
          script: |
            $cert = New-SelfSignedCertificate -certstorelocation cert:\localmachine\my -dnsname localhost
            $thumb = $cert.thumbprint
            $appId = New-Guid
            & netsh http add sslcert ipport=0.0.0.0:5001 certhash="$thumb" appid="{$appId}"

      # extension from Marketplace https://marketplace.visualstudio.com/items?itemName=rbosma.InstallNetCoreRuntimeAndHosting
      - task: InstallNetCoreRuntimeAndHosting@1
        inputs:
          version: 5.0
          norestart: true
          iisReset: false

      - task: CmdLine@2
        displayName: restart IIS
        inputs:
          script: |
            net stop was /y
            net start w3svc

      - bash: curl -v http://localhost:5000
        displayName: check http://localhost:5000
      - bash: curl -vk https://localhost:5001
        displayName: check https://localhost:5001

      - template: steps/yarn-install.yml

      - bash: |
          cd frontend

          export JEST_PUPPETEER_CONFIG=tests/e2e-full-server/jest-puppeteer.config.js
          export HTTP_BASE_URL="http://localhost:5000"
          export HTTPS_BASE_URL="https://localhost:5001"

          yarn jest --projects tests/e2e-full-server --verbose --reporters=default --reporters=jest-junit --run-in-band --detectOpenHandles
        displayName: test

      - task: CmdLine@2
        inputs:
          script: |
            "C:\windows\system32\inetsrv\appcmd.exe" stop site /site.name:"Vue_Test_Server"
            "C:\windows\system32\inetsrv\appcmd.exe" stop apppool /apppool.name:"www-test"
            echo --------------------------------------------------
            "C:\windows\system32\inetsrv\appcmd.exe"  list sites
        displayName: stop IIS-site

      - task: PublishTestResults@2
        condition: always()
        inputs:
          testRunner: JUnit
          testResultsFiles: frontend/junit.xml

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: $(Build.SourcesDirectory)/web-app/logs
          artifactName: logs-e2e-full-iis

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: frontend/screenshots-e2e-full-server
          artifactName: screenshots-e2e-full-iis

      - bash: |
          cd frontend
          chmod +x tests/*.sh

          echo "-------------------------------------------------"
          echo "log-dir:"
          ls -la --color ../web-app/logs
          echo ""
          echo "-------------------------------------------------"

          tests/verify-server-logs.sh ../web-app/logs
        displayName: verify server logs
