jobs:
  - job: backend_build_and_test
    displayName: backend build and test
    pool:
      vmImage: ubuntu-20.04
    strategy:
      matrix:
        #debug-build:
        #  BUILD_CONFIG: Debug
        release-build:
          BUILD_CONFIG: Release
    steps:
      # .NET 6 already installed
      #- template: steps/dotnet-install.yml

      - bash: |
          echo 'installed sdks:'
          dotnet --list-sdks
          echo "-------------------------------------------------"
          echo 'environment variables:'
          env | sort

          cd backend
          chmod u+x ./build.sh
        displayName: init

      - bash: |
          cd backend
          ./build.sh build
        displayName: build

      # coverlet.msbuild must be added as package to the tests
      - bash: |
          cd backend
          ./build.sh test-coverage
        displayName: test

      - task: PublishTestResults@2
        condition: always()
        inputs:
          testRunner: VSTest
          testResultsFiles: 'backend/**/*.trx'

      - bash: |
            cd backend/tests/Coverage
            workDir="$(System.DefaultWorkingDirectory)"

            if [[ "$AGENT_OS" == "Windows_NT" ]]; then
                # Windows needs special treatment for the substitution due the \
                workDir="${workDir//\\/\\\\}\\\\"
            else
                workDir+="/"
            fi
            # Mac has a different sed, so special case it (hooray for standards ;-))
            if [[ "$AGENT_OS" != "Darwin" ]]; then
                sed -i 's|<source>[^<]*</source>|<source>/</source>|g' "Cobertura.xml"
                sed -i "s|${workDir}||g" "Cobertura.xml"
            else
                sed -i '' 's|<source>[^<]+</source>|<source>/</source>|g' "Cobertura.xml"
                sed -i '' "s|${workDir}||g" "Cobertura.xml"
            fi
        displayName: make Cobertura-paths relative

      # shortcut for PublishPipelineArtifact
      # Coverage report will be created later in a different stage
      - publish: backend/tests/Coverage/Cobertura.xml
        artifact: 'Coverage-$(Agent.JobName)'
        displayName: publish artifact code coverage

      - task: DownloadPipelineArtifact@2
        inputs:
          targetPath: ./backend/source/Server/wwwroot
          artifact: wwwroot
        condition: and(succeeded(), eq(variables['BUILD_CONFIG'], 'Release'))

      - bash: |
          cd backend/source/Server
          dotnet publish -c Release --no-build -o dist

          echo "-------------------------------------------------"
          ls -laR dist
        displayName: publish web-app
        condition: and(succeeded(), eq(variables['BUILD_CONFIG'], 'Release'))

      - publish: backend/source/Server/dist
        artifact: web-app
        condition: and(succeeded(), eq(variables['BUILD_CONFIG'], 'Release'))
